1. 객체지향 프로그래밍이 무엇인가요? or OOP가 무엇인가요?
  >> OOP는 컴퓨터 프로그래밍 패러다임 중 하나입니다. 프로그래밍에서 필요한 데이터를 추상화시켜 상태와 행위를 가진 객체를 만들고 그 객체들 간의 유기적인 상호작용을 통해 로직을 구성하는 프로그래밍 방법입니다.
  >> Object Oriented Programming
 
1-1. 장점은 무엇인가요? (재사용 용이, 유지보수가 쉬움, 대형프로젝트 적합)
  >> 코드 재사용이 용이해 남이 만든 클래스를 가져와 이용하거나 상속으로 확장할 수 있습니다. 또한 부분만 수정할 수 있어 유지보수가 쉬워서 대형프로젝트에 적합합니다.

1-2. 단점은요? (용량이 큼, 상대적으로 속도 느림, 설계에 많은 노력 필)
  >> 객체가 많으면 용량이 커질 수 있고 처리속도가 상대적으로 느립니다. 또한 첫 설계 시 많은 노력이 필요합니다.

1-3. 객체지향 프로그래밍에서 좀 중요한게 뭐에요?
  >> 클래스와 객체, 추상화, 캡슐화, 상속, 다형성 다섯가지 키워드로 중요함을 표현할 수 있습니다.

1-3-1. 클래스와 객체가 무엇인가요?
  >> 클래스: 데이터를 만들 때 추상화를 거쳐 집단에 속하는 속성과 행위를 변수와 메소드로 정의하는 것입니다.
  >> 객체: 클래스에서 정의한 것을 토대로 실제 메모리 상에 할당된 것을 말합니다.

1-3-2. OOP에서 추상화란 무엇인가요?
  * 불필요한 정보는 숨기고 중요한 정보만 표현하는 것을 말합니다.

1-3-3. 캡슐화는 무엇인가요?
  >> 기능과 특성의 모음을 클래스라는 캡슐에 분류해 넣는 것을 말합니다. 관련된 기능과 특성을 한 곳에 모으고 분류해 코드를 재수정 없이 재활용할 목적으로 진행합니다.

1-3-4. 상속이란?
  >> 부모클래스의 속성과 기능을 그대로 이어 받아 사용할 수 있게 하고 기능의 일부분을 변경해야 할 경우 자식클래스에서 해당 기능만 다시 수정하여 사용할 수 있게 하는 것입니다. 다중상속은 불가합니다.

1-3-5. 다형성이란?
  >> 하나의 변수명, 함수명 등이 상황에 따라 다른 의미로 해석될 수 있음을 뜻합니다. 오버로딩과 오버라이딩이 있습니다.

1-3-6. getter & setter 사용하는 이유는?
  >> 메서드를 통해 접근하기 때문에, 메소드 안에 매개변수와 같이 어떤 올바르지 않은 입력에 대해 사전에 처리할 수 있게 제한하거나 조절할 수 있어 사용합니다.

==============================================================

1.클래스와 인터페이스
공통점: 선언만 있고 구현 내용은 없습니다. 객체생성이 불가하고 자식만이 생성 가능합니다.
차이점
  - 클래스: abstract메소드가 하나라도 존재하는 클래스로 구현이 다 안되어 있을 수도 있습니다. 상속받은 클래스는 반드시 추상메소드를 구현해야 합니다. 부모가 갖고 있는 기능을 받으면서 더 추가하거나 약간 수정할때만 쓴다
  - 인터페이스: 구현체없이 메소드만 명세되어 있습니다. 그래서 반드시 인터페이스에 있는 메소드를 모두 구현해야 합니다. 다중상속이 가능합니다. 다양한 형태로 구현 가능한 다형성



2. 이너조인과 아우터조인은 무엇인가요?
  >> 두 개의 테이블이 있을 때, 두 테이블의 교집합을 말합니다. 벤다이어그램으로 나타내면 교차되는 부분입니다.
  >> 아우터조인은 두개의 테이블이 있을 때 두 테이블의 합집합을 말합니다. 벤다이어그램으로 나타내면 합집합으로 보이는 부분입니다.

3. 메이븐이 무엇인가요?
자바 프로젝트의 빌드를 자동화해주는 빌드 툴입니다. 자바소스를 컴파일하고 패키지해서 디플로이 하는 일을 자동화 해줍니다. 빌드: 컴파일의 집합, deploy: 만들어진 프로그램을 서비스 위치로 보내는 작업

4. 프론트엔드와 백엔드를 설명하세요
>> 프론트엔드 : 사용자들이 웹사이트에서 보고 상호작용하는 모든 것을 프론트엔드라고 하며, UI와 UX를 만드는데에 초점을 맞춘 것입니다. 와잉어프레임이나 목업등을 먼저 만들어야 합니다. HTML, CSS, JS
>> 백엔드 : 서버측 개발분야로 사용자들이 직접 보거나 상호작용을 할 수는 없지만 프론트에서  사용자들이 취하는 행동들을 처리해 간접적으로 엑세스하므로 소프트웨어 개발의 일부분입니다. 
PHP, Javascript, JAVA,  C#, 라라벨, 익스프레스

5. do나 이런거 어디서 설정?
루트 콘텍스트 : DB에 접근할 URL과 계정을 설정, sqlSession을 설정
서블렛 콘텍스트 : 필요한 컨피겨 네임스페이스들을 체크 만으로 빈 설정 완료, 리졸브 설정(프리픽스와 서픽스를 설정하여 풀 어드레스를 적지 않아도 접근 가능하도록 함

6. 어노테이션
  >> @를 사용해 주석, 자바코드에 주석을 달아서 특별한 의미를 부여하는 것
  >> 컴파일러에게 문법 에러를 체크할 수 있는 정보 제공, 코드 자동 생성할 수 있도록 정보 제공, 특정 기능을 실행하도록 정보 제공
  >> 컴포넌트 : 개발자가 작성한 클래스를 빈으로 등록하기 위해 함
  >> 빈 : 개발자가 직접 제어가 불가능한 외부 라이브러리 등을 빈으로 만들려 할 때 사용
  >> 오토와이어드 : 의존 대상 객체를 찾아서 해당 객체에 필요한 의존성을 주입

7.오버로딩 오버라이딩
1. 오버로딩(Overloading)
- 메서드의 이름은 같고 매개변수의 갯수나 타입이 다른 함수를 정의하는 것을 의미한다.
- 리턴값만을 다르게 갖는 오버로딩은 작성 할 수 없다.

2. 오버라이딩(Overriding)
- 상위 클래스의 메서드를 하위 클래스가 재정의 하는 것이다.
- 메서드의 이름은 물론 파라메터의 갯수나 타입도 동일해야 하며, 주로 상위 클래스의 동작을 상속받은 하위 클래스에서 변경하기 위해 사용된다.

자바스크립트는 웹브라우저에서 작동하는 스크립트입니다.
jQuery 역시 자바스크립트입니다. 자바스크립트로 빈번하게 사용되는 기능들을 약간 다른 형식으로 사용하게 만든 라이브러리입니다.

















































