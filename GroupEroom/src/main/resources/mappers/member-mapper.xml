<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >


<mapper namespace="memberMapper">
	<resultMap type="Member" id="memberResultMap">
		<id property="memberId" column="MEMBER_ID"></id>
		<result property="memberDept" column="MEMBER_DEPT" />
		<result property="memberJob" column="MEMBER_JOB" />
		<result property="memberName" column="MEMBER_NAME" />
		<result property="memberPwd" column="MEMBER_PWD" />
		<result property="memberRrn" column="MEMBER_RRN" />
		<result property="memberPhone" column="MEMBER_PHONE" />
		<result property="memberEmail" column="MEMBER_EMAIL" />
		<result property="memberAddr" column="MEMBER_ADDR" />
		<result property="bank" column="BANK" />
		<result property="bankAccount" column="ACCOUNT" />
		<result property="regDate" column="REG_DATE" />
		<result property="quitYn" column="QUIT_YN" />
		<result property="quitDate" column="QUIT_DATE" />
		<result property="originalFileName" column="ORIGINALFILE_NAME" />
		<result property="renameFileName" column="RENAMEFILE_NAME" />
	</resultMap>

	<!-- 로그인 -->
	<select id="loginMember" resultMap="memberResultMap">
		SELECT *FROM MEMBER
		WHERE
		MEMBER_ID = #{memberId } AND MEMBER_PWD = #{memberPwd }
	</select>
	<!-- 세션, -->
	<select id="selectOneMember" resultMap="memberResultMap">
		SELECT * FROM MEMBER
		WHERE MEMBER_ID = #{memberId }
	</select>
	<!-- 사원 목록 -->
	<select id="memberList" resultMap="memberResultMap">
		SELECT * FROM MEMBER
		ORDER BY
		MEMBER_ID

	</select>
	<select id="selectSearchList" resultMap="memberResultMap">
		SELECT * FROM MEMBER
		<if test="searchCondition.toString() == 'name'">
			WHERE MEMBER_NAME LIKE '%' || #{searchValue } || '%'
		</if>
		<if test="searchCondition.toString() == 'dept'">
			WHERE MEMBER_DEPT LIKE '%' || #{searchValue } || '%'
		</if>
		<if test="searchCondition.toString() == 'job'">
			WHERE MEMBER_JOB LIKE '%' || #{searchValue } || '%'
		</if>
		<if test="searchCondition.toString() == 'all'">
			WHERE MEMBER_NAME LIKE '%' || #{searchValue } || '%'
			OR
			MEMBER_DEPT LIKE '%' || #{searchValue } || '%'
			OR MEMBER_JOB LIKE '%'
			|| #{searchValue } || '%'
		</if>
		ORDER BY MEMBER_ID DESC
	</select>
	<!-- 이메일아이디 중복 -->
	<select id="checkemId" resultType="_int">
		SELECT COUNT(*) FROM MEMBER
		WHERE MEMBER_EMAIL = #{memberEmail }

	</select>
	<!-- 비밀번호 체크 -->
	<select id="pwdcheck" resultType="_int">
		SELECT COUNT(*) FROM MEMBER
		WHERE MEMBER_PWD = #{memberPwd }
	</select>

	<select id="selectListCount" resultType="_int">
		SELECT COUNT(*) FROM
		MEMBER
	</select>
	<select id="selectSearchListCount" resultType="_int">
		SELECT COUNT(*) FROM MEMBER
		<if test="searchCondition.toString() == 'name'">
			WHERE MEMBER_NAME LIKE '%' || #{searchValue } || '%'
		</if>
		<if test="searchCondition.toString() == 'dept'">
			WHERE MEMBER_DEPT LIKE '%' || #{searchValue } || '%'
		</if>
		<if test="searchCondition.toString() == 'job'">
			WHERE MEMBER_JOB LIKE '%' || #{searchValue } || '%'
		</if>
		<if test="searchCondition.toString() == 'all'">
			WHERE MEMBER_NAME LIKE '%' || #{searchValue } || '%'
			OR
			MEMBER_DEPT LIKE '%' || #{searchValue } || '%'
			OR MEMBER_JOB LIKE '%'
			|| #{searchValue } || '%'
		</if>
		ORDER BY MEMBER_ID DESC
	</select>
	<!-- 등록 ,id 시퀀스조회 -->
	<insert id="insertMember" parameterType="Member">
		INSERT INTO MEMBER
		(MEMBER_ID, MEMBER_DEPT, MEMBER_JOB, MEMBER_NAME, MEMBER_PWD,
		MEMBER_RRN,
		MEMBER_PHONE, MEMBER_EMAIL, MEMBER_ADDR, BANK, REG_DATE,
		QUIT_YN, QUIT_DATE,
		ACCOUNT, ORIGINALFILE_NAME, RENAMEFILE_NAME)
		VALUES(ID_SEQ.NEXTVAL, #{memberDept }, #{memberJob }, #{memberName },
		DEFAULT, #{memberRrn
		},
		#{memberPhone }, #{memberEmail }, #{memberAddr
		}, #{bank }, SYSDATE,'N', DEFAULT,
		#{bankAccount }, #{originalFileName
		}, #{renameFileName })
	</insert>

	<!-- 부서조회키(전자결재, 메일) -->
	<select id="selectDepMemberList" resultMap="memberResultMap">
		SELECT * FROM MEMBER
		WHERE MEMBER_DEPT = #{depName }
	</select>
	<select id="selectDeptMemberList" resultMap="memberResultMap">
		SELECT * FROM MEMBER
		WHERE MEMBER_DEPT = #{deptName }
	</select>
	
	<select id="selectSuccessMember" resultMap="memberResultMap">
		SELECT * FROM MEMBER
		WHERE MEMBER_NAME = #{memberName } AND MEMBER_RRN = #{memberRrn }
	</select>



	<!-- 수정 -->
	<update id="updateMember" parameterType="Member">
		UPDATE MEMBER
		<if test='quitYn.toString() == "Y"'>
			SET MEMBER_DEPT=#{memberDept },MEMBER_JOB=#{memberJob
			},MEMBER_PHONE=#{memberPhone },
			MEMBER_EMAIL=#{memberEmail},MEMBER_ADDR=#{memberAddr },BANK=#{bank },
			ACCOUNT=#{bankAccount },QUIT_YN = #{quitYn
			},RENAMEFILE_NAME=#{renameFileName },
			ORIGINALFILE_NAME=#{originalFileName },QUIT_DATE=SYSDATE
		</if>
		<if test='quitYn.toString() == "N"'>
			SET MEMBER_DEPT=#{memberDept },MEMBER_JOB=#{memberJob
			},MEMBER_PHONE=#{memberPhone },
			MEMBER_EMAIL=#{memberEmail},MEMBER_ADDR=#{memberAddr },BANK=#{bank },
			ACCOUNT=#{bankAccount },QUIT_YN=#{quitYn
			},RENAMEFILE_NAME=#{renameFileName },
			ORIGINALFILE_NAME=#{originalFileName },QUIT_DATE=NULL
		</if>
		WHERE MEMBER_ID = #{memberId}
	</update>

	<update id="updatememberPwd" parameterType="Member">
		UPDATE MEMBER SET
		MEMBER_PWD = #{memberPwd}
		WHERE MEMBER_ID = #{memberId}
	</update>


</mapper>