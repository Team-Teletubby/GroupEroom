<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mailMapper">

	<resultMap type="Mail" id="mailResultMap">
		<id property="mailNo" 			column="MAIL_NO" />
		<result property="receiverId" 	column="RECEIVER_ID" />
		<result property="receiverName" column="RECEIVER_NAME" />
		<result property="senderId" 	column="SENDER_ID" />
		<result property="senderName" 	column="SENDER_NAME" />
		<result property="ccId" 		column="CC_ID" />
		<result property="ccName" 		column="CC_NAME" />
		<result property="mailTitle" 	column="MAIL_TITLE" />
		<result property="mailContents" column="MAIL_CONTENTS" />
		<result property="sentDate" 	column="SENT_DATE" />
		<result property="readDate" 	column="READ_DATE" />
		<result property="readCount" 	column="READ_COUNT" />
		<result property="trashYn" 		column="TRASH_YN" />
	</resultMap>
	
	<resultMap type="MailFile" id="mailFileResultMap">
		<id property="fileNo" column="FILE_NO" />
		<result property="originalFilename" column="ORIGINAL_FILENAME" />
		<result property="renameFilename" column="RENAME_FILENAME" />
		<result property="filePath" column="FILE_PATH" />
		<result property="fileSize" column="FILE_SIZE" />
		<result property="uploadDate" column="UPLOAD_DATE" />
		<result property="mailNo" column="MAIL_NO" />
	</resultMap>
	
<!-- 카운트 출력 -->
	<select id="selectInboxListCount" resultType="_int">
		SELECT COUNT(*) FROM MAIL 
		WHERE (RECEIVER_ID = #{value } OR CC_ID = #{value })
		AND TRASH_YN = 'N' 
		AND MOD(MAIL_NO, 2) = 1
	</select>
	<select id="selectSentListCount" resultType="_int">
		SELECT COUNT(*) FROM MAIL 
		WHERE SENDER_ID = #{value }
		AND TRASH_YN = 'N'
		AND MOD(MAIL_NO, 3) = 1 
	</select>
	<select id="selectTrashListCount" resultType="_int">
		SELECT COUNT(*) FROM MAIL
		WHERE (SENDER_ID = #{value } OR RECEIVER_ID = #{value } OR CC_ID = #{value }) AND TRASH_YN = 'Y'
	</select>
	
<!-- 읽음확인 -->
	<update id="updateCount">
		UPDATE MAIL
		SET READ_COUNT = READ_COUNT + 1, READ_DATE = SYSDATE
		WHERE MAIL_NO = #{mailNo}
	</update>
	
<!-- 받은편지함 출력 -->
	<select id="selectAllInbox" parameterType="_int" resultMap="mailResultMap">
		SELECT a.MAIL_NO, a.RECEIVER_ID, a.SENDER_ID, b.MEMBER_NAME AS SENDER_NAME, b.MEMBER_DEPT, a.MAIL_TITLE, a.MAIL_CONTENTS, TO_CHAR(a.SENT_DATE, 'YYYY-MM-DD HH24:MI:SS') AS SENT_DATE, TO_CHAR(a.READ_DATE, 'YYYY-MM-DD HH24:MI:SS') AS READ_DATE, a.READ_COUNT  
		FROM MAIL a 
		JOIN MEMBER b ON a.SENDER_ID = b.MEMBER_ID
		WHERE (RECEIVER_ID = #{value } OR CC_ID = #{value })
		AND TRASH_YN = 'N' 
		AND MOD(MAIL_NO, 2) = 1
		ORDER BY SENT_DATE DESC
	</select>
	
<!-- 보낸편지함 출력 -->
	<select id="selectAllSentMail" parameterType="_int" resultMap="mailResultMap">
		SELECT a.MAIL_NO, a.RECEIVER_ID, a.SENDER_ID, b.MEMBER_NAME AS "RECEIVER_NAME", b.MEMBER_DEPT, a.MAIL_TITLE, a.MAIL_CONTENTS, TO_CHAR(a.SENT_DATE, 'YYYY-MM-DD HH24:MI:SS') AS SENT_DATE, TO_CHAR(a.READ_DATE, 'YYYY-MM-DD HH24:MI:SS') AS READ_DATE, a.READ_COUNT 
		FROM MAIL a 
		JOIN MEMBER b ON a.RECEIVER_ID = b.MEMBER_ID
		WHERE SENDER_ID = #{value }
		AND TRASH_YN = 'N'
		AND MOD(MAIL_NO, 2) = 0 
		ORDER BY SENT_DATE DESC
	</select>
	
<!-- 휴지통 출력 -->
	<select id="selectAllTrash" parameterType="_int" resultMap="mailResultMap">
		SELECT a.MAIL_NO, a.RECEIVER_ID, a.SENDER_ID, b.MEMBER_NAME AS "SENDER_NAME", b.MEMBER_DEPT, a.MAIL_TITLE, a.MAIL_CONTENTS, a.SENT_DATE, a.READ_DATE, a.READ_COUNT   
		FROM MAIL a 
		JOIN MEMBER b ON a.SENDER_ID = b.MEMBER_ID
		WHERE (SENDER_ID = #{value } OR RECEIVER_ID = #{value } OR CC_ID = #{value })
		AND TRASH_YN = 'Y'
		ORDER BY MAIL_NO DESC 
	</select>	
	
<!-- 메일 상세조회  -->
	<select id="selectOneMail" resultMap="mailResultMap">
		SELECT a.MAIL_NO, a.RECEIVER_ID, b.MEMBER_NAME AS RECEIVER_NAME, a.SENDER_ID, c.MEMBER_NAME AS SENDER_NAME, a.CC_ID,  a.MAIL_TITLE, a.MAIL_CONTENTS, a.SENT_DATE, a.TRASH_YN 
		FROM MAIL a 
		INNER JOIN MEMBER b ON a.RECEIVER_ID = b.MEMBER_ID 
		INNER JOIN MEMBER c ON a.SENDER_ID = c.MEMBER_ID 
		WHERE MAIL_NO = #{mailNo}
	</select>
	
	<select id="selectAllInboxIndex" parameterType="_int" resultMap="mailResultMap">
		SELECT a.Mail_no, a.RECEIVER_ID, b.MEMBER_NAME AS RECEIVER_NAME, a.SENDER_ID, a.MAIL_TITLE, a.MAIL_CONTENTS, a.SENT_DATE, a.TRASH_YN, a.SENDER_ID, c.MEMBER_NAME AS SENDER_NAME
		FROM MAIL a
		INNER JOIN MEMBER b ON a.RECEIVER_ID = b.MEMBER_ID
		INNER JOIN MEMBER c ON a.SENDER_ID = c.MEMBER_ID
		WHERE a.RECEIVER_ID = #{memberId }
		AND MOD(MAIL_NO, 2) = 1
		ORDER BY MAIL_NO desc
	</select>
	
<!-- 보내는사람 메일생성 -->
	<insert id="composeMailSend">
		<if test="ccId != null">
			INSERT INTO MAIL 
			VALUES(MAIL_SEQ.NEXTVAL, #{receiverId }, #{senderId }, #{ccId }, #{mailTitle }, #{mailContents }, SYSDATE, DEFAULT, DEFAULT, DEFAULT)
		</if>
		<if test="ccId == null">
			INSERT INTO MAIL 
			VALUES(MAIL_SEQ.NEXTVAL, #{receiverId }, #{senderId }, DEFAULT, #{mailTitle }, #{mailContents }, SYSDATE, DEFAULT, DEFAULT, DEFAULT)
		</if>
	</insert>
<!-- 받는사람 메일생성 -->
	<insert id="composeMailReceive">
		<if test="ccId != null">
			INSERT INTO MAIL 
			VALUES(MAIL_SEQ.NEXTVAL, #{receiverId }, #{senderId }, #{ccId }, #{mailTitle }, #{mailContents }, TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI:SS'), DEFAULT, DEFAULT, DEFAULT)
		</if>
		<if test="ccId == null">
			INSERT INTO MAIL 
			VALUES(MAIL_SEQ.NEXTVAL, #{receiverId }, #{senderId }, DEFAULT, #{mailTitle }, #{mailContents }, SYSDATE, DEFAULT, DEFAULT, DEFAULT)
		</if>
	</insert>
<!-- 파일첨부 -->
	<insert id="uploadFile" parameterType="HashMap">
		INSERT INTO MAIL_FILE (FILE_NO, ORIGINAL_FILENAME, RENAME_FILENAME, FILE_PATH, FILE_SIZE, UPLOAD_DATE, MAIL_NO) 
		VALUES(MAIL_FILE_SEQ.NEXTVAL, #{originalFilename}, #{renameFilename}, #{filePath}, #{fileSize}, SYSDATE, MAIL_SEQ.CURRVAL)
	</insert>
	
<!-- 메일 삭제 -->
	<delete id="deleteMail" parameterType="_int">
		DELETE FROM MAIL 
		WHERE MAIL_NO = #{mailNo}
	</delete>
	
<!-- 휴지통으로 이동 -->
	<update id="updateTrashY">
		UPDATE MAIL 
		SET TRASH_YN = 'Y'
		WHERE MAIL_NO = #{mailNo}
	</update> 
	
<!--  -->
	<!-- 휴지통으로 이동 -->
	<update id="updateTrashAjax">
		UPDATE MAIL 
		SET TRASH_YN = 'Y'
		WHERE MAIL_NO = #{mailNo}
	</update> 
		
<!-- 원래 편지함으로 이동 -->
	<update id="updateTrashN">
		UPDATE MAIL 
		SET TRASH_YN = 'N'
		WHERE MAIL_NO = #{mailNo}
	</update> 


</mapper>